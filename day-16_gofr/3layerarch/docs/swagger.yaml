basePath: /
definitions:
  models.Task:
    properties:
      completed:
        type: boolean
      id:
        type: integer
      task:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for managing tasks and users.
  title: Task Management API
  version: "1.0"
paths:
  /task:
    get:
      description: Returns a list of all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Creates a task with the given JSON body
      parameters:
      - description: Task to create
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new task
      tags:
      - tasks
  /task/{id}:
    delete:
      description: Deletes a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete task
      tags:
      - tasks
    get:
      description: Returns a task given its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get task by ID
      tags:
      - tasks
    put:
      description: Marks a task as completed
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update task status
      tags:
      - tasks
  /user:
    post:
      consumes:
      - application/json
      description: Creates a user with the given JSON body
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new user
      tags:
      - users
  /user/{id}:
    get:
      description: Returns a user given their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get user by ID
      tags:
      - users
swagger: "2.0"
